import { ModuleWithProviders, OnDestroy, InjectionToken, Injector } from '@angular/core';
import { Action, ActionReducer, ActionReducerMap, ActionReducerFactory, StoreFeature, InitialState, MetaReducer, RuntimeChecks } from './models';
import { ActionsSubject } from './actions_subject';
import { ReducerManager, ReducerObservable } from './reducer_manager';
import { ScannedActionsSubject } from './scanned_actions_subject';
import { Store } from './store';
import * as ɵngcc0 from '@angular/core';
export declare class StoreRootModule {
    constructor(actions$: ActionsSubject, reducer$: ReducerObservable, scannedActions$: ScannedActionsSubject, store: Store<any>);
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<StoreRootModule, never, never, never>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<StoreRootModule>;
}
export declare class StoreFeatureModule implements OnDestroy {
    private features;
    private featureReducers;
    private reducerManager;
    constructor(features: StoreFeature<any, any>[], featureReducers: ActionReducerMap<any>[], reducerManager: ReducerManager, root: StoreRootModule);
    ngOnDestroy(): void;
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<StoreFeatureModule, never, never, never>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<StoreFeatureModule>;
}
export interface StoreConfig<T, V extends Action = Action> {
    initialState?: InitialState<T>;
    reducerFactory?: ActionReducerFactory<T, V>;
    metaReducers?: MetaReducer<T, V>[];
}
export interface RootStoreConfig<T, V extends Action = Action> extends StoreConfig<T, V> {
    runtimeChecks?: Partial<RuntimeChecks>;
}
export declare class StoreModule {
    static forRoot<T, V extends Action = Action>(reducers: ActionReducerMap<T, V> | InjectionToken<ActionReducerMap<T, V>>, config?: RootStoreConfig<T, V>): ModuleWithProviders<StoreRootModule>;
    static forFeature<T, V extends Action = Action>(featureName: string, reducers: ActionReducerMap<T, V> | InjectionToken<ActionReducerMap<T, V>>, config?: StoreConfig<T, V> | InjectionToken<StoreConfig<T, V>>): ModuleWithProviders<StoreFeatureModule>;
    static forFeature<T, V extends Action = Action>(featureName: string, reducer: ActionReducer<T, V> | InjectionToken<ActionReducer<T, V>>, config?: StoreConfig<T, V> | InjectionToken<StoreConfig<T, V>>): ModuleWithProviders<StoreFeatureModule>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<StoreModule, never, never, never>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<StoreModule>;
}
export declare function _createStoreReducers(injector: Injector, reducers: ActionReducerMap<any, any>): {};
export declare function _createFeatureStore(injector: Injector, configs: StoreConfig<any, any>[] | InjectionToken<StoreConfig<any, any>>[], featureStores: StoreFeature<any, any>[]): (StoreFeature<any, any> | {
    key: string;
    reducerFactory: any;
    metaReducers: any;
    initialState: any;
})[];
export declare function _createFeatureReducers(injector: Injector, reducerCollection: ActionReducerMap<any, any>[]): {}[];
export declare function _initialStateFactory(initialState: any): any;
export declare function _concatMetaReducers(metaReducers: MetaReducer[], userProvidedMetaReducers: MetaReducer[]): MetaReducer[];

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmVfbW9kdWxlLmQudHMiLCJzb3VyY2VzIjpbInN0b3JlX21vZHVsZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBPbkRlc3Ryb3ksIEluamVjdGlvblRva2VuLCBJbmplY3RvciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aW9uLCBBY3Rpb25SZWR1Y2VyLCBBY3Rpb25SZWR1Y2VyTWFwLCBBY3Rpb25SZWR1Y2VyRmFjdG9yeSwgU3RvcmVGZWF0dXJlLCBJbml0aWFsU3RhdGUsIE1ldGFSZWR1Y2VyLCBSdW50aW1lQ2hlY2tzIH0gZnJvbSAnLi9tb2RlbHMnO1xuaW1wb3J0IHsgQWN0aW9uc1N1YmplY3QgfSBmcm9tICcuL2FjdGlvbnNfc3ViamVjdCc7XG5pbXBvcnQgeyBSZWR1Y2VyTWFuYWdlciwgUmVkdWNlck9ic2VydmFibGUgfSBmcm9tICcuL3JlZHVjZXJfbWFuYWdlcic7XG5pbXBvcnQgeyBTY2FubmVkQWN0aW9uc1N1YmplY3QgfSBmcm9tICcuL3NjYW5uZWRfYWN0aW9uc19zdWJqZWN0JztcbmltcG9ydCB7IFN0b3JlIH0gZnJvbSAnLi9zdG9yZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTdG9yZVJvb3RNb2R1bGUge1xuICAgIGNvbnN0cnVjdG9yKGFjdGlvbnMkOiBBY3Rpb25zU3ViamVjdCwgcmVkdWNlciQ6IFJlZHVjZXJPYnNlcnZhYmxlLCBzY2FubmVkQWN0aW9ucyQ6IFNjYW5uZWRBY3Rpb25zU3ViamVjdCwgc3RvcmU6IFN0b3JlPGFueT4pO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU3RvcmVGZWF0dXJlTW9kdWxlIGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIGZlYXR1cmVzO1xuICAgIHByaXZhdGUgZmVhdHVyZVJlZHVjZXJzO1xuICAgIHByaXZhdGUgcmVkdWNlck1hbmFnZXI7XG4gICAgY29uc3RydWN0b3IoZmVhdHVyZXM6IFN0b3JlRmVhdHVyZTxhbnksIGFueT5bXSwgZmVhdHVyZVJlZHVjZXJzOiBBY3Rpb25SZWR1Y2VyTWFwPGFueT5bXSwgcmVkdWNlck1hbmFnZXI6IFJlZHVjZXJNYW5hZ2VyLCByb290OiBTdG9yZVJvb3RNb2R1bGUpO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG5leHBvcnQgaW50ZXJmYWNlIFN0b3JlQ29uZmlnPFQsIFYgZXh0ZW5kcyBBY3Rpb24gPSBBY3Rpb24+IHtcbiAgICBpbml0aWFsU3RhdGU/OiBJbml0aWFsU3RhdGU8VD47XG4gICAgcmVkdWNlckZhY3Rvcnk/OiBBY3Rpb25SZWR1Y2VyRmFjdG9yeTxULCBWPjtcbiAgICBtZXRhUmVkdWNlcnM/OiBNZXRhUmVkdWNlcjxULCBWPltdO1xufVxuZXhwb3J0IGludGVyZmFjZSBSb290U3RvcmVDb25maWc8VCwgViBleHRlbmRzIEFjdGlvbiA9IEFjdGlvbj4gZXh0ZW5kcyBTdG9yZUNvbmZpZzxULCBWPiB7XG4gICAgcnVudGltZUNoZWNrcz86IFBhcnRpYWw8UnVudGltZUNoZWNrcz47XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTdG9yZU1vZHVsZSB7XG4gICAgc3RhdGljIGZvclJvb3Q8VCwgViBleHRlbmRzIEFjdGlvbiA9IEFjdGlvbj4ocmVkdWNlcnM6IEFjdGlvblJlZHVjZXJNYXA8VCwgVj4gfCBJbmplY3Rpb25Ub2tlbjxBY3Rpb25SZWR1Y2VyTWFwPFQsIFY+PiwgY29uZmlnPzogUm9vdFN0b3JlQ29uZmlnPFQsIFY+KTogTW9kdWxlV2l0aFByb3ZpZGVyczxTdG9yZVJvb3RNb2R1bGU+O1xuICAgIHN0YXRpYyBmb3JGZWF0dXJlPFQsIFYgZXh0ZW5kcyBBY3Rpb24gPSBBY3Rpb24+KGZlYXR1cmVOYW1lOiBzdHJpbmcsIHJlZHVjZXJzOiBBY3Rpb25SZWR1Y2VyTWFwPFQsIFY+IHwgSW5qZWN0aW9uVG9rZW48QWN0aW9uUmVkdWNlck1hcDxULCBWPj4sIGNvbmZpZz86IFN0b3JlQ29uZmlnPFQsIFY+IHwgSW5qZWN0aW9uVG9rZW48U3RvcmVDb25maWc8VCwgVj4+KTogTW9kdWxlV2l0aFByb3ZpZGVyczxTdG9yZUZlYXR1cmVNb2R1bGU+O1xuICAgIHN0YXRpYyBmb3JGZWF0dXJlPFQsIFYgZXh0ZW5kcyBBY3Rpb24gPSBBY3Rpb24+KGZlYXR1cmVOYW1lOiBzdHJpbmcsIHJlZHVjZXI6IEFjdGlvblJlZHVjZXI8VCwgVj4gfCBJbmplY3Rpb25Ub2tlbjxBY3Rpb25SZWR1Y2VyPFQsIFY+PiwgY29uZmlnPzogU3RvcmVDb25maWc8VCwgVj4gfCBJbmplY3Rpb25Ub2tlbjxTdG9yZUNvbmZpZzxULCBWPj4pOiBNb2R1bGVXaXRoUHJvdmlkZXJzPFN0b3JlRmVhdHVyZU1vZHVsZT47XG59XG5leHBvcnQgZGVjbGFyZSBmdW5jdGlvbiBfY3JlYXRlU3RvcmVSZWR1Y2VycyhpbmplY3RvcjogSW5qZWN0b3IsIHJlZHVjZXJzOiBBY3Rpb25SZWR1Y2VyTWFwPGFueSwgYW55Pik6IHt9O1xuZXhwb3J0IGRlY2xhcmUgZnVuY3Rpb24gX2NyZWF0ZUZlYXR1cmVTdG9yZShpbmplY3RvcjogSW5qZWN0b3IsIGNvbmZpZ3M6IFN0b3JlQ29uZmlnPGFueSwgYW55PltdIHwgSW5qZWN0aW9uVG9rZW48U3RvcmVDb25maWc8YW55LCBhbnk+PltdLCBmZWF0dXJlU3RvcmVzOiBTdG9yZUZlYXR1cmU8YW55LCBhbnk+W10pOiAoU3RvcmVGZWF0dXJlPGFueSwgYW55PiB8IHtcbiAgICBrZXk6IHN0cmluZztcbiAgICByZWR1Y2VyRmFjdG9yeTogYW55O1xuICAgIG1ldGFSZWR1Y2VyczogYW55O1xuICAgIGluaXRpYWxTdGF0ZTogYW55O1xufSlbXTtcbmV4cG9ydCBkZWNsYXJlIGZ1bmN0aW9uIF9jcmVhdGVGZWF0dXJlUmVkdWNlcnMoaW5qZWN0b3I6IEluamVjdG9yLCByZWR1Y2VyQ29sbGVjdGlvbjogQWN0aW9uUmVkdWNlck1hcDxhbnksIGFueT5bXSk6IHt9W107XG5leHBvcnQgZGVjbGFyZSBmdW5jdGlvbiBfaW5pdGlhbFN0YXRlRmFjdG9yeShpbml0aWFsU3RhdGU6IGFueSk6IGFueTtcbmV4cG9ydCBkZWNsYXJlIGZ1bmN0aW9uIF9jb25jYXRNZXRhUmVkdWNlcnMobWV0YVJlZHVjZXJzOiBNZXRhUmVkdWNlcltdLCB1c2VyUHJvdmlkZWRNZXRhUmVkdWNlcnM6IE1ldGFSZWR1Y2VyW10pOiBNZXRhUmVkdWNlcltdO1xuIl19