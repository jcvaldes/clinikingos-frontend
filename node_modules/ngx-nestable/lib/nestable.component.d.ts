import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnDestroy, OnInit, Renderer2, ViewContainerRef } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class NestableComponent implements OnInit, OnDestroy {
    private ref;
    private renderer;
    private el;
    private zone;
    listChange: EventEmitter<any>;
    drop: EventEmitter<any>;
    drag: EventEmitter<any>;
    disclosure: EventEmitter<any>;
    template: ViewContainerRef;
    options: import("./nestable.models").NestableSettings;
    disableDrag: boolean;
    list: any[];
    dragRootEl: any;
    dragEl: any;
    dragModel: any;
    moving: boolean;
    /**
     * Dragged element contains children, and those children contain other children and so on...
     * This property gives you the number of generations contained within the dragging item.
     */
    dragDepth: number;
    /**
     * The depth of dragging item relative to element root (ngx-nestable)
     */
    relativeDepth: number;
    hasNewRoot: boolean;
    pointEl: any;
    items: any[];
    private _componentActive;
    private _mouse;
    private _list;
    private _cancelMousemove;
    private _cancelMouseup;
    private _placeholder;
    private _itemId;
    private _registerHandleDirective;
    private _dragIndex;
    private _parentDragId;
    private _oldListLength;
    constructor(ref: ChangeDetectorRef, renderer: Renderer2, el: ElementRef, zone: NgZone);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private _generateItemIds;
    private _generateItemExpanded;
    private _createHandleListener;
    private _createDragClone;
    private _createPlaceholder;
    /**
     * Sets depth proerties (relative and drag)
     */
    private _calculateDepth;
    private _mouseStart;
    private _mouseUpdate;
    private _showMasks;
    private _hideMasks;
    /**
     * calc mouse traverse distance on axis
     * @param m - mouse
     */
    private _calcMouseDistance;
    private _move;
    reset(): void;
    dragStartFromItem(event: any, item: any, parentList: any): void;
    private dragStart;
    dragStop(event: any): void;
    dragMove(event: any): void;
    expandAll(): void;
    collapseAll(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NestableComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NestableComponent, "ngx-nestable", never, { "options": "options"; "disableDrag": "disableDrag"; "list": "list"; "template": "template"; }, { "listChange": "listChange"; "drop": "drop"; "drag": "drag"; "disclosure": "disclosure"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmVzdGFibGUuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbIm5lc3RhYmxlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBOZ1pvbmUsIE9uRGVzdHJveSwgT25Jbml0LCBSZW5kZXJlcjIsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5lc3RhYmxlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgcmVmO1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgcHJpdmF0ZSBlbDtcbiAgICBwcml2YXRlIHpvbmU7XG4gICAgbGlzdENoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgZHJvcDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgZHJhZzogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgZGlzY2xvc3VyZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgdGVtcGxhdGU6IFZpZXdDb250YWluZXJSZWY7XG4gICAgb3B0aW9uczogaW1wb3J0KFwiLi9uZXN0YWJsZS5tb2RlbHNcIikuTmVzdGFibGVTZXR0aW5ncztcbiAgICBkaXNhYmxlRHJhZzogYm9vbGVhbjtcbiAgICBsaXN0OiBhbnlbXTtcbiAgICBkcmFnUm9vdEVsOiBhbnk7XG4gICAgZHJhZ0VsOiBhbnk7XG4gICAgZHJhZ01vZGVsOiBhbnk7XG4gICAgbW92aW5nOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIERyYWdnZWQgZWxlbWVudCBjb250YWlucyBjaGlsZHJlbiwgYW5kIHRob3NlIGNoaWxkcmVuIGNvbnRhaW4gb3RoZXIgY2hpbGRyZW4gYW5kIHNvIG9uLi4uXG4gICAgICogVGhpcyBwcm9wZXJ0eSBnaXZlcyB5b3UgdGhlIG51bWJlciBvZiBnZW5lcmF0aW9ucyBjb250YWluZWQgd2l0aGluIHRoZSBkcmFnZ2luZyBpdGVtLlxuICAgICAqL1xuICAgIGRyYWdEZXB0aDogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIFRoZSBkZXB0aCBvZiBkcmFnZ2luZyBpdGVtIHJlbGF0aXZlIHRvIGVsZW1lbnQgcm9vdCAobmd4LW5lc3RhYmxlKVxuICAgICAqL1xuICAgIHJlbGF0aXZlRGVwdGg6IG51bWJlcjtcbiAgICBoYXNOZXdSb290OiBib29sZWFuO1xuICAgIHBvaW50RWw6IGFueTtcbiAgICBpdGVtczogYW55W107XG4gICAgcHJpdmF0ZSBfY29tcG9uZW50QWN0aXZlO1xuICAgIHByaXZhdGUgX21vdXNlO1xuICAgIHByaXZhdGUgX2xpc3Q7XG4gICAgcHJpdmF0ZSBfY2FuY2VsTW91c2Vtb3ZlO1xuICAgIHByaXZhdGUgX2NhbmNlbE1vdXNldXA7XG4gICAgcHJpdmF0ZSBfcGxhY2Vob2xkZXI7XG4gICAgcHJpdmF0ZSBfaXRlbUlkO1xuICAgIHByaXZhdGUgX3JlZ2lzdGVySGFuZGxlRGlyZWN0aXZlO1xuICAgIHByaXZhdGUgX2RyYWdJbmRleDtcbiAgICBwcml2YXRlIF9wYXJlbnREcmFnSWQ7XG4gICAgcHJpdmF0ZSBfb2xkTGlzdExlbmd0aDtcbiAgICBjb25zdHJ1Y3RvcihyZWY6IENoYW5nZURldGVjdG9yUmVmLCByZW5kZXJlcjogUmVuZGVyZXIyLCBlbDogRWxlbWVudFJlZiwgem9uZTogTmdab25lKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBfZ2VuZXJhdGVJdGVtSWRzO1xuICAgIHByaXZhdGUgX2dlbmVyYXRlSXRlbUV4cGFuZGVkO1xuICAgIHByaXZhdGUgX2NyZWF0ZUhhbmRsZUxpc3RlbmVyO1xuICAgIHByaXZhdGUgX2NyZWF0ZURyYWdDbG9uZTtcbiAgICBwcml2YXRlIF9jcmVhdGVQbGFjZWhvbGRlcjtcbiAgICAvKipcbiAgICAgKiBTZXRzIGRlcHRoIHByb2VydGllcyAocmVsYXRpdmUgYW5kIGRyYWcpXG4gICAgICovXG4gICAgcHJpdmF0ZSBfY2FsY3VsYXRlRGVwdGg7XG4gICAgcHJpdmF0ZSBfbW91c2VTdGFydDtcbiAgICBwcml2YXRlIF9tb3VzZVVwZGF0ZTtcbiAgICBwcml2YXRlIF9zaG93TWFza3M7XG4gICAgcHJpdmF0ZSBfaGlkZU1hc2tzO1xuICAgIC8qKlxuICAgICAqIGNhbGMgbW91c2UgdHJhdmVyc2UgZGlzdGFuY2Ugb24gYXhpc1xuICAgICAqIEBwYXJhbSBtIC0gbW91c2VcbiAgICAgKi9cbiAgICBwcml2YXRlIF9jYWxjTW91c2VEaXN0YW5jZTtcbiAgICBwcml2YXRlIF9tb3ZlO1xuICAgIHJlc2V0KCk6IHZvaWQ7XG4gICAgZHJhZ1N0YXJ0RnJvbUl0ZW0oZXZlbnQ6IGFueSwgaXRlbTogYW55LCBwYXJlbnRMaXN0OiBhbnkpOiB2b2lkO1xuICAgIHByaXZhdGUgZHJhZ1N0YXJ0O1xuICAgIGRyYWdTdG9wKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGRyYWdNb3ZlKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGV4cGFuZEFsbCgpOiB2b2lkO1xuICAgIGNvbGxhcHNlQWxsKCk6IHZvaWQ7XG59XG4iXX0=